using Gtk 4.0;
using Adw 1;
using Gdk 4.0;
using GtkSource 5;

template $PsequelQueryEditor : Adw.Bin {

    selected-query: bind template.query-viewmodel as <$PsequelQueryViewModel>.selected-query;

    Paned paned {
        orientation: vertical;
        shrink-start-child: false;
        resize-start-child: true;
    
        shrink-end-child: false;
        resize-end-child: false;

        Adw.Bin {
            height-request: 250;
            ScrolledWindow {
                GtkSource.View editor {
                    buffer: GtkSource.Buffer buffer {
                        // text: bind template.query-viewmodel as <$PsequelQueryViewModel>.queries;
                    };
                    monospace: true;
                    auto-indent: true;
                    show-line-numbers: true;
                    smart-backspace: true;
                    smart-home-end: before;
                    top-margin: 6;

                    highlight-current-line: true;
                    insert-spaces-instead-of-tabs: true;
                }
            }
        }

        Box {
            orientation: vertical;
            height-request: 400;
            Box {
                margin-top: 8;
                margin-bottom: 8;
                margin-start: 8;
                margin-end: 8;
                spacing: 12;

                MenuButton {
                    styles ["big-icon"]
                    icon-name: "settings-symbolic";
                    halign: start;
                    valign: start;
                    direction: down;
                    menu-model: menu;
                }

                MenuButton {
                    label: "Query History";
                    
                    popover: Popover popover {
                        height-request: 300;
                        width-request: 600;
                        Box {
                            spacing: 4;
                            orientation: vertical;
                            // SearchEntry {
                            //     placeholder-text: "Find Query";
                            // }
                            
                            ScrolledWindow {
                                vexpand: true;
                                min-content-width: 300;
                                max-content-width: 600;

                                ListView {
                                    styles ["navigation-sidebar"]
                                    model: SingleSelection selection_model {
                                        model: bind template.query-viewmodel as <$PsequelQueryViewModel>.query-history;
                                    };
                                    
                                    factory: BuilderListItemFactory {
                                        resource: "/me/ppvan/psequel/gtk/query-listitem.ui";
                                    };
                                    
                                    activate => $on_listview_activate();
                                }
                            }
                            
                            Separator {}

                            Button {
                                styles ["destructive-action"]
                                label: "Clear History";
                            }
                        
                        }
                    };
                }


                Label {
                    hexpand: true;
                }

                Spinner spinner {
                    spinning: bind template.query-viewmodel as <$PsequelQueryViewModel>.is-loading;
                }

                Button run_query_btn {
                    styles ["suggested-action"]
                    label: "Run Query";
                    clicked => $run_query_cb();
                }
            }

            Separator {}

            $PsequelQueryResults query_results {
                wellcome_message: "Run a query";
                current-relation: bind template.query-viewmodel as <$PsequelQueryViewModel>.current-relation;
                is-loading: bind template.query-viewmodel as <$PsequelQueryViewModel>.is-loading;
                err-msg: bind template.query-viewmodel as <$PsequelQueryViewModel>.err-msg;
            }

            Box {
                spacing: 4;
                margin-start: 12;
                margin-top: 4;
                margin-bottom: 4;
                margin-end: 12;
                Label row_affect {
                    label: bind template.query-viewmodel as <$PsequelQueryViewModel>.row-affected;
                }

                Label {
                    hexpand: true;
                }

                Label query_time {
                    label: bind template.query-viewmodel as <$PsequelQueryViewModel>.query-time;
                }
            }
        }
    }
}

menu menu {
  section {

    item {
      label: _("_Editor Font");
      action: "app.preferences";
    }

    item {
      label: _("_Auto Uppercase");
      action: "editor.auto-uppercase";
    }

    item {
      label: _("_Auto Completion");
      action: "editor.auto-completion";
    }
  }
}